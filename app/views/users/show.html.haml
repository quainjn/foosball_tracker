- provide :title, resource.name

.row
  .span16
    %h1= yield :title
        
- if resource == current_user
  %p= link_to 'Edit profile', edit_resource_path
      
.row    
  .span8
    %h3
      Rating:
      %span#rating{:data => {:default => resource.current_rank}}= '%0.2f' % resource.current_rank
    %p
      = surround '(', ')' do        
        &mu; = 
        %span#skill_mean{:data => {:default => resource.current_rating.mean}}= '%0.2f' % resource.current_rating.mean \
        , &sigma; = 
        %span#skill_deviation{:data => {:default => resource.current_rating.deviation}}= '%0.2f' % resource.current_rating.deviation \
    %p
      %small Hover over points on the graph for specific game ratings
    
.row
  .span16
    #fig{:style => 'height: 300px'}

:coffeescript
  $ ->
    data = #{resource.players.order('players.created_at ASC').collect{|p| [p.created_at.to_i * 1000, Player.rank(p.rating), p.skill_mean]}.to_json}
    myFlot = $.plot $('#fig'), [data],
      series:
        lines:
          show: true
          fill: true
        points:
          show: true
      xaxis:
        mode: 'time'
        timeformat: '%b %d'
      grid:
        hoverable: true
        mouseActiveRadius: 25
      crosshair:
        mode: 'x'
        color: '#aaaaaa'
                
    $('#fig').bind 'plothover', (event, pos, item) ->
      if item
        # highilight(item.series, item.datapoint)
        $('#rating').text(item.datapoint[1].toFixed(2))
        $('#skill_mean').text(item.datapoint[2].toFixed(2))
        $('#skill_deviation').text(((item.datapoint[2] - item.datapoint[1]) / 3).toFixed(2))
        myFlot.lockCrosshair
          x: item.datapoint[0]
          y: item.datapoint[1]
          
      else
        $('#rating').text($('#rating').data('default').toFixed(2))
        $('#skill_mean').text($('#skill_mean').data('default').toFixed(2))
        $('#skill_deviation').text($('#skill_deviation').data('default').toFixed(2))
        myFlot.unlockCrosshair()

%p #{pluralize resource.players.where(:position => 'Offense').count, 'game'} on offense, #{pluralize resource.players.where(:position => 'Defense').count, 'game'} on defense
          
        
.row
  .span8
    %h3= pluralize resource.wins_count, 'Win'
    = render :partial => 'games/game', :collection => resource.wins.order('games.created_at DESC').includes([:league, {:players => :user}])
  .span8
    %h3= pluralize resource.losses_count, 'Loss'
    = render :partial => 'games/game', :collection => resource.losses.order('games.created_at DESC').includes([:league, {:players => :user}])
      